{"version":3,"sources":["reducers/expenses.js","reducers/filters.js","actions/expenses.js","components/ExpenseListItem.js","selectors/expenses.js","components/ExpensesList.js","actions/filters.js","components/ExpenseListFilters.js","components/ExpenseDashboard.js","components/About.js","components/NoMatch.js","components/ExpenseForm.js","components/AddExpense.js","components/EditExpense.js","routers/AppRouter.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["expensesReducerDefaultState","state","action","type","expense","filter","id","map","updates","filterInitialState","text","sortBy","createdAt","undefined","startDate","moment","startOf","endDate","endOf","value","editExpense","connect","dispatch","description","amount","className","to","data-toggle","data-placement","title","onClick","format","expenses","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","toLowerCase","includes","sort","a","b","selectExpenses","filters","props","key","setStartDate","setEndDate","ExpenseListFilters","focused","onDatesChange","onFocusChange","console","log","setState","name","this","onChange","e","target","focusedInput","endDateId","startDateId","showClearDates","isOutsideRange","regular","reopenPickerOnClearDates","React","Component","ExpenseDashboard","About","NoMatch","currentLocation","useLocation","pathname","ExpenseForm","onDescriptionChange","onAmountChange","match","onNoteChange","note","onDateChange","onFocusedChange","addExpense","preventDefault","error","onSubmit","parseFloat","valueOf","toString","autoFocus","placeholder","date","numberOfMonths","uuidv4","history","push","find","params","AppRouter","exact","activeClassName","path","component","AddExpense","EditExpense","store","createStore","combineReducers","expensesReducer","filtersReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f829e35d.chunk.js","sourcesContent":["//? EXPENSES REDUCER :\n//? ==================\nconst expensesReducerDefaultState = [];\n\nexport default (state = expensesReducerDefaultState, action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return [\n                ...state,\n                action.expense\n            ];\n        case 'REMOVE_EXPENSE':\n            return state.filter(({ id }) => id !== action.id);\n        case 'EDIT_EXPENSE':\n            return state.map((expense) => {\n                if (expense.id === action.id) {\n                    return {\n                        ...expense,\n                        ...action.updates\n                    };\n                } else {\n                    return expense;\n                }\n            });\n        default:\n            return state;\n    }\n};\n\n","import moment from \"moment\";\n//? FILTER REDUCER\n//? ==============\n\nconst filterInitialState = {\n    text: '',\n    sortBy: 'date',\n    createdAt: undefined,\n    startDate: moment().startOf('month'),\n    endDate: moment().endOf(\"month\")\n};\n//export default FilterReducer = (state = filterInitialState, action)=>{\nexport default (state = filterInitialState, action)=>{\n    switch (action.type){\n        case 'SET_TEXT_FILTER':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'SORT_BY_AMOUNT':\n            return {\n                ...state,\n                sortBy: 'amount'\n            }\n        case 'SORT_BY_DATE':\n            return{\n                ...state,\n                sortBy: 'date'\n            }\n        case 'SET_END_DATE':\n\n            return action.value !== undefined ?{\n                    ...state,\n                    endDate: action.value\n                } :\n                {\n                    state,\n                    startDate: undefined\n                }\n        case 'SET_START_DATE':\n            return action.value !== undefined ? {\n                    ...state,\n                    startDate: action.value\n                }:\n                {\n                    ...state,\n                    startDate: undefined\n                }\n        default :\n            return state;\n    }\n}","//? ACTION GENERATOR FOR EXPENSES\n//? =============================\n\nimport {v4 as uuidv4} from \"uuid\";\n//! ADD_EXPENSE\n\nexport const addExpense = ({description='',note='',amount=0,createdAt=''}={})=>({\n    type: 'ADD_EXPENSE',\n    expense:{\n        id: uuidv4(),\n        description,\n        note,\n        amount,\n        createdAt\n    }\n})\n\n//! REMOVE_EXPENSE\nexport const removeExpense = ({id})=>({\n    id,\n    type: 'REMOVE_EXPENSE',\n\n})\n\n//! EDIT_EXPENSE\nexport const editExpense = (id, updates)=>({\n    id,\n    type: 'EDIT_EXPENSE',\n    updates,\n})\n\n\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {editExpense, removeExpense} from '../actions/expenses';\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nconst ExpenseListItem = ({ dispatch, id, description, amount, createdAt })=>(\n        <div className={`card-restyled text-white mb-3 bg-info`}>\n            <ul className=\"list-inline float-right m-0\">\n                <li className=\"list-inline-item\">\n                    <Link to={`/editExpense/${id}`}>\n                        <button className=\"btn btn-success btn-sm rounded-5\" type=\"button\" data-toggle=\"tooltip\"\n                                data-placement=\"top\" title=\"Edit\" onClick={() => {\n                            dispatch(editExpense({id}));\n                        }}><i className=\"fa fa-edit\"></i></button>\n                    </Link>\n                </li>\n                <li className=\"list-inline-item\">\n                    <button className=\"btn btn-danger btn-sm rounded-0\" type=\"button\" data-toggle=\"tooltip\"\n                            data-placement=\"top\" title=\"Delete\" onClick={() => {\n                        dispatch(removeExpense({ id }));\n                    }}><i className=\"fa fa-trash\"></i></button>\n                </li>\n            </ul>\n            <div className=\"card-header text-center\">\n                <div className=\"row\">\n                    <div className=\"col\">amount: ${amount}</div>\n                    <div className=\"col\">created at: {moment(createdAt).format('L')}</div>\n                </div>\n\n            </div>\n            <div className=\"card-body\">\n                <p className=\"card-text\">{description}</p>\n            </div>\n        </div>\n)\nexport default connect()(ExpenseListItem);","import moment from \"moment\";\n//! Get filtered expenses\n\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\n    return expenses.filter((expense) => {\n        const createdAtMoment = moment(expense.createdAt)\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day'): true\n        const endDateMatch = endDate ? endDate.isSameOrAfter(createdAtMoment, 'day'): true\n        const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\n        return startDateMatch && endDateMatch && textMatch;\n    }).sort((a, b) => {\n        if (sortBy === 'date') {\n            return a.createdAt < b.createdAt ? 1 : -1;\n        } else if (sortBy === 'amount') {\n            return a.amount < b.amount ? 1 : -1;\n        }\n        return 0;\n    });\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport ExpenseListItem from './ExpenseListItem';\nimport selectExpenses from '../selectors/expenses';\n\nconst ExpenseList = (props)=>(\n    <div className={'expenses-wrapper'}>\n        <div className={'row'}>\n            {props.expenses.map((expense) => {\n                return <ExpenseListItem key={expense.id} {...expense} />;\n            })}\n        </div>\n    </div>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        expenses: selectExpenses(state.expenses, state.filters)\n    };\n};\n\nexport default connect(mapStateToProps)(ExpenseList);\n","\n//! SET_TEXT_FILTER\nexport const setTextFilter = (text)=>({\n    text,\n    type:'SET_TEXT_FILTER',\n});\n\n//! SORT_BY_AMOUNT\n\nexport const sortByAmount = ()=>({\n/**\n * sort the expenses list by amount(ascending order)\n */\n\ntype: 'SORT_BY_AMOUNT'\n})\n\n//! SORT_BY_DATE\n\nexport const sortByDate = ()=>({\n    type: 'SORT_BY_DATE'\n})\n\n//! SET_START_DATE\n\nexport const setStartDate = (value)=>({\n    type: 'SET_START_DATE',\n    value\n})\n\n//! SET_END_DATE\n\nexport const setEndDate = (value)=>({\n    type: 'SET_END_DATE',\n    value\n})\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {setTextFilter} from \"../actions/filters\";\nimport {sortByDate} from \"../actions/filters\";\nimport {sortByAmount} from \"../actions/filters\";\nimport {DateRangePicker} from 'react-dates';\nimport {setStartDate} from \"../actions/filters\";\nimport {setEndDate} from \"../actions/filters\";\n\nclass ExpenseListFilters extends React.Component{\n    state = {\n        focused:null\n    }\n\n    onDatesChange = ({ startDate, endDate }) => {\n        this.props.dispatch(setStartDate(startDate));\n        this.props.dispatch(setEndDate(endDate));\n    };\n    onFocusChange = (focused) => {\n        console.log('focused')\n        this.setState(() => ({ focused }));\n    }\n    render(){\n        return (\n            <form className={'form-inline'}>\n            <input name='filter' type=\"text\" className={'expense-filter'} value={this.props.filters.text}\n            onChange={(e) => {\n                this.props.dispatch(setTextFilter(e.target.value));\n            }}/>\n            <div className=\"form-group\">\n            <select value={this.props.filters.sortBy} className=\"custom-select\"\n                onChange={(e) => {\n                    if (e.target.value === 'date') {\n                        this.props.dispatch(sortByDate());\n                    } else if (e.target.value === 'amount') {\n                        this.props.dispatch(sortByAmount());\n                    }\n                }}>\n                <option value=\"date\">Date</option>\n                <option value=\"amount\">Amount</option>\n            </select>\n                <DateRangePicker\n                    startDate={this.props.filters.startDate}\n                    endDate={this.props.filters.endDate}\n                    onDatesChange={this.onDatesChange}\n                    focusedInput={this.state.focused}\n                    endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                    startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                    onFocusChange={this.onFocusChange}\n                    showClearDates={true}\n                    // numberOfMonths={1}\n                    isOutsideRange={() => false}\n                    regular = {()=> true}\n                    reopenPickerOnClearDates= {()=>true}\n\n\n                />\n            </div>\n            </form>\n\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        filters: state.filters\n    };\n};\nexport default connect(mapStateToProps)(ExpenseListFilters)","import React from \"react\";\nimport ConnectedExpenseList from \"./ExpensesList\";\nimport ExpenseListFilters from \"./ExpenseListFilters\";\n\nconst ExpenseDashboard = () => {\n    return (\n        <div className={'center_IT'}>\n            <ExpenseListFilters/>\n            <ConnectedExpenseList/>\n        </div>\n    );\n}\nexport default ExpenseDashboard;","import React from \"react\";\n\nconst About = (props) => {\n    console.log(props)\n    return <h2>About Page</h2>;\n}\nexport default About;","import React from \"react\";\nimport {NavLink, useLocation} from \"react-router-dom\";\n\nconst NoMatch = ()=>{\n    const currentLocation = useLocation();\n    return (\n        <div className={'text-center'}>\n            <h1>Sorry but we've trouble finding : {currentLocation.pathname}</h1>\n            <NavLink to='/'>Go Home</NavLink>\n        </div>\n    )\n}\nexport default NoMatch;","import React from 'react';\nimport moment from 'moment';\nimport {SingleDatePicker} from 'react-dates';\nimport {connect} from \"react-redux\";\n\nclass ExpenseForm extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props.expense);\n        this.state = {\n            description: props.expense ? props.expense.description :'',\n            amount: props.expense ? ((props.expense.amount) / 100).toString() :'',\n            note: props.expense ? props.expense.note :'',\n            createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\n            focused : null,\n            error: false\n        };\n    }\n\n    onDescriptionChange = (e)=>{\n        const description = e.target.value;\n        this.setState(()=>(\n            {description})\n        )\n    }\n    onAmountChange = (e)=>{\n        const amount = e.target.value;\n        if(!amount || amount.match(/^\\d+(\\.\\d{0,2})?$/)){\n            this.setState(()=>(\n                {amount}\n            ))\n        }\n\n    }\n    onNoteChange = (e)=>{\n        const note = e.target.value;\n        this.setState(()=>(\n            {note}\n        ))\n    }\n    onDateChange = (createdAt) => {\n        if(createdAt){\n            this.setState(()=>(\n                {createdAt}\n            ))\n        }\n    }\n    onFocusedChange = ({focused})=>{\n        this.setState(()=>(\n            {focused}\n        ))\n    }\n    addExpense = (e)=>{\n        e.preventDefault()\n        if(e.target.amount.value && e.target.description.value && e.target.note.value){\n            this.setState(()=>({\n                error: false\n            }))\n            // Dispatch the new expense\n            this.props.onSubmit({\n                description: this.state.description,\n                amount: parseFloat(this.state.amount) * 100,\n                createdAt: this.state.createdAt.valueOf(),\n                note: this.state.note\n            });\n        }\n\n\n        else{\n            this.setState(()=>({\n                error: true\n            }))\n        }\n    }\n    render(){\n        return(\n            <div className={'wrapper'}>\n                <form className={'form-wrapper'} onSubmit={this.addExpense}>\n                    <div className=\"form-row\">\n                        <div className=\"col\">\n                            <input type=\"text\" autoFocus name={'description'}\n                                   className=\"form-control \" value={this.state.description}\n                                   placeholder=\"Description\" onChange={this.onDescriptionChange}/>\n                        </div>\n                        <div className=\"col\">\n                            <input type=\"text\" name={'amount'}  className=\"form-control\"\n                                   placeholder=\"Amount\" value={this.state.amount}\n                                   onChange={this.onAmountChange}/>\n                        </div>\n                        <div className=\"col\">\n                                <SingleDatePicker\n                                    date={this.state.createdAt} // momentPropTypes.momentObj or null\n                                    onDateChange={this.onDateChange} // PropTypes.func.isRequired\n                                    focused={this.state.focused} // PropTypes.bool\n                                    onFocusChange={this.onFocusedChange} // PropTypes.func.isRequired\n                                    id=\"your_unique_id\" // PropTypes.string.isRequired,\n                                    numberOfMonths={1}\n                                    isOutsideRange = {()=> false }\n                                />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <textarea className=\"form-control\" name={'note'} placeholder={'Add note here'}\n                                  value={this.state.note}\n                                  onChange={this.onNoteChange}\n                        >\n                        </textarea>\n                    </div>\n                    <div>\n                        <button type=\"submit\" className=\"button-wrapper btn btn-primary mb-2\">\n                            Add Expense\n                        </button>\n                        <div>\n                            {this.state.error && <p className={'text-danger'}>Please fill in the required fields above</p>}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        filters: state.filters\n    };\n};\nexport default connect(mapStateToProps)(ExpenseForm)\n\n","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport {connect} from \"react-redux\";\nimport {addExpense} from '../actions/expenses'\n\nconst AddExpense = (props) => (\n    <div>\n        <ExpenseForm\n            onSubmit={(expense) => {\n                props.dispatch(addExpense(expense));\n                props.history.push('/');\n            }}\n        />\n    </div>\n);\n\nexport default connect()(AddExpense);","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport {connect} from \"react-redux\";\nimport {editExpense} from \"../actions/expenses\";\nconst EditExpense = (props) =>{\n    return (\n        <ExpenseForm\n            expense = {props.expense}\n            onSubmit={(expense) => {\n                props.dispatch(editExpense(props.match.params.id, expense))\n                props.history.push('/')\n            }}\n        />\n    );\n}\n\nconst mapStateToProps = (state, props)=>{\n    return {\n        expense: state.expenses.find((expense)=> expense.id === props.match.params.id)\n    }\n\n}\nexport default connect(mapStateToProps)(EditExpense);","import React from \"react\";\nimport {BrowserRouter as Router, NavLink, Route, Switch} from \"react-router-dom\";\nimport ExpenseDashboard from '../components/ExpenseDashboard';\nimport About from '../components/About'\nimport NoMatch from \"../components/NoMatch\";\nimport AddExpense from \"../components/AddExpense\";\nimport EditExpense from \"../components/EditExpense\";\n\nconst AppRouter = ()=>(\n    <Router>\n        <div>\n            <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n                <ul className={'navbar-nav mr-auto'}>\n                    <li className={'nav-item'}>\n                        <NavLink to=\"/\" exact className={'nav-link'}\n                                 activeClassName=\"selected\"\n                        >Dashboard\n                        </NavLink>\n                    </li>\n                    <li className={'nav-item'}>\n                        <NavLink to=\"/addExpense\"\n                                 className={'nav-link'}\n                                 activeClassName=\"selected\"\n                        >Add expense\n                        </NavLink>\n                    </li>\n                    <li className={'nav-item'}>\n                        <NavLink to=\"/editExpense\"\n                                 className={'nav-link'}\n                                 activeClassName=\"selected\"\n                        >Edit expense\n                        </NavLink>\n                    </li>\n                    <li className={'nav-item'}>\n                        <NavLink to=\"/about\"\n                                 className={'nav-link'}\n                                 activeClassName=\"selected\"\n                        >About\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n            <Switch>\n                <Route path=\"/\" component={ExpenseDashboard} exact={true} />\n                <Route path=\"/about\" component={About} exact={true} />\n                <Route path=\"/addExpense\" component={AddExpense} />\n                <Route path=\"/editExpense/:id\" component={EditExpense} />\n                <Route component={NoMatch} />\n            </Switch>\n        </div>\n    </Router>\n);\n\nexport default AppRouter","import React from 'react';\nimport configureStore from \"./store/configureStore\";\nimport AppRouter from './routers/AppRouter'\nimport { Provider } from 'react-redux'\nconst store = configureStore();\nconsole.log('tested')\nclass App extends React.Component{\n\n    render(){\n        return (\n            <Provider store={store}>\n                <AppRouter/>\n            </Provider>\n        )\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers} from 'redux';\nimport expensesReducer from '../reducers/expenses';\nimport filtersReducer from '../reducers/filters';\n\nexport default () => {\n    let store;\n    store = createStore(\n        combineReducers({\n            expenses: expensesReducer,\n            filters: filtersReducer\n        }),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport  'jquery';\nimport 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './Sass/App.scss';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}